name: Deploy to VPS

on:
 push:
    branches: [ master ]
 pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      APP_NAME: yasnowebscrapping
      CONTAINER_NAME: yasnowebscrapping

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.REP_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest -f WebScrappingDemo/Dockerfile .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} --password-stdin
          docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true
          docker run -d --name ${{ env.CONTAINER_NAME }} --network=deyasnonetwork --user root -p 8081:8080 -e ASPNETCORE_URLS=http://+:8080 ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
